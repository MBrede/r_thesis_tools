name: Quarto Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup r2u
        uses: eddelbuettel/github-actions/r2u-setup@master

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install Python and Dependencies
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found, skipping Python dependencies."
          fi
      - run: pip install jupyter

      - name: Install R packages
        run:  |
          Rscript -e '
            install.packages("stringr")
            candidates = list.files(recursive = T, pattern = ".(qmd|R|r|Rmd|rmd)$", full.names = T)
            extract_packages <- function(file_name){
                readLines(file_name) |>
                    paste0(collapse = ' ') |>
                    stringr::str_extract_all("([[:alnum:]_]+(?=::))|((?<=library\\()[[:alnum:]_]+)") |>
                    unlist()
            }
            pkgs <- lapply(candidates, extract_packages) |>
                unlist()

            desc <- read.dcf("DESCRIPTION")
            pkgs <- c(pkgs, unlist(strsplit(desc[1, "Imports"], "\n")))
            pkgs <- trimws(pkgs) |>
            unique()

            for (pkg in pkgs) {
                if (!requireNamespace(pkg, quietly = TRUE)) {
                    install.packages(pkg, Ncpus = 6)
                }
            }
          '

      - name: Render and Publish
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
